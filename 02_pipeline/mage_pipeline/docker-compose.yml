# cloud version of mage pipeline
version: '3.8'
services:
  mage_pipe:
    build:
      context: .
      dockerfile: mage.Dockerfile
      # args:
      # - USER_CODE_PATH=/home/src/${PROJECT_NAME}
      # These variables will be set inside the mage_pipe container
      # They will be populated from .env file
      # POSTGRES_USER: ${POSTGRES_USER}
      # POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # POSTGRES_HOST: ${POSTGRES_HOST}
      # POSTGRES_PORT: ${POSTGRES_PORT}
      # POSTGRES_DBNAME: ${POSTGRES_DBNAME}
      # ENV: ${ENV}
    # Use the latest Mage AI image from Docker Hub
    # image: mageai/mageai:latest
    container_name: mage_pipeline
    command: mage start ${PROJECT_NAME}
    env_file:
      - .env
    environment:
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
    ports:
      - 6789:6789
    volumes:
      - .:/home/src/
      - ~/.config/gcloud:/root/.config/gcloud
    restart: on-failure:5
    depends_on:
      postgres:
        condition: service_healthy

  mlflow_server:
    build:
      context: .
      dockerfile: mlflow.Dockerfile
    container_name: mlflow_tracking_server
    # Expose the MLflow UI port to your local machine
    ports:
      - "5050:5000"
    environment:
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
    # Use a named volume to persist all MLflow data (experiments, models, etc.)
    volumes:
      - ~/.config/gcloud:/root/.config/gcloud
    # The command to start the MLflow tracking server inside the container
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/mydb
      --default-artifact-root gs://mmotl_mlflow_artifacts/
    # Healthcheck ensures the service is ready before other services depend on it
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 15s
      timeout: 5s
      retries: 3
    restart: on-failure:5
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "4321:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  dbeaver:
    image: dbeaver/cloudbeaver:latest
    container_name: dbeaver
    ports:
      - "8978:8978"
    environment:
      - CB_SERVER_URL=http://localhost:8978
      - CB_SERVER_NAME=DBeaver
    volumes:
      - dbeaver_data:/opt/cloudbeaver/workspace
    restart: unless-stopped

volumes:
  postgres_data:
  dbeaver_data: